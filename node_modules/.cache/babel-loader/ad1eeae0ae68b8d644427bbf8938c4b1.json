{"ast":null,"code":"var _jsxFileName = \"/Users/gopal/react-js/inotebook/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContex from \"./NoteContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = 'http://localhost:4000';\n  const initialnotes = [];\n  const [notes, setNotes] = useState(initialnotes); //  add note\n\n  const addNote = async (title, description, tag) => {\n    // api call \n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjJhYjg5YTU5ZTZmZWY5ODY0YzZiNzhhIn0sImlhdCI6MTY1NTQ1NTE3MX0.7Y-7ZyeVYxVh9xwkOZrszcK2nr2XCLDmcPiEBmZg_wE\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    console.log('adding a note');\n    const note = {\n      \"_id\": \"62acde8b6feca70de134894b06\",\n      \"user\": \"62ab89a59e6fef9864c6b78a\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-06-17T20:05:31.907Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  }; //  get all note\n\n\n  const getNotes = async () => {\n    // api call \n    const response = await fetch(`${host}/api/notes/fechallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjJhYjg5YTU5ZTZmZWY5ODY0YzZiNzhhIn0sImlhdCI6MTY1NTQ1NTE3MX0.7Y-7ZyeVYxVh9xwkOZrszcK2nr2XCLDmcPiEBmZg_wE\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes();\n  }; //  delete note\n\n\n  const deleteNote = id => {\n    console.log('deleting the note with id' + id);\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNote);\n  }; //  edit note\n\n\n  const editNote = async (id, title, description, tag) => {\n    // Api call (google-fech with headers)\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjJhYjg5YTU5ZTZmZWY5ODY0YzZiNzhhIn0sImlhdCI6MTY1NTQ1NTE3MX0.7Y-7ZyeVYxVh9xwkOZrszcK2nr2XCLDmcPiEBmZg_wE\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContex.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NoteState, \"PmObJbMQ3XIzAd8o6ZA74AiiggE=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContex","NoteState","props","host","initialnotes","notes","setNotes","addNote","title","description","tag","response","fetch","method","headers","body","JSON","stringify","console","log","note","concat","getNotes","json","deleteNote","id","newNote","filter","_id","editNote","index","length","element","children"],"sources":["/Users/gopal/react-js/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\nimport NoteContex from \"./NoteContex\";\nconst NoteState = (props) => {\n  const host = 'http://localhost:4000'\n  const initialnotes = []\n  const [notes, setNotes] = useState(initialnotes)\n\n  //  add note\n  const addNote =async (title, description, tag) => {\n    // api call \n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjJhYjg5YTU5ZTZmZWY5ODY0YzZiNzhhIn0sImlhdCI6MTY1NTQ1NTE3MX0.7Y-7ZyeVYxVh9xwkOZrszcK2nr2XCLDmcPiEBmZg_wE\"\n\n      },\n\n      body: JSON.stringify({title,description,tag})\n    });\n\n\n\n\n    console.log('adding a note');\n    const note = {\n      \"_id\": \"62acde8b6feca70de134894b06\",\n      \"user\": \"62ab89a59e6fef9864c6b78a\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2022-06-17T20:05:31.907Z\",\n      \"__v\": 0\n    }\n    setNotes(notes.concat(note))\n  }\n  //  get all note\n  const getNotes =async () => {\n    // api call \n    const response = await fetch(`${host}/api/notes/fechallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjJhYjg5YTU5ZTZmZWY5ODY0YzZiNzhhIn0sImlhdCI6MTY1NTQ1NTE3MX0.7Y-7ZyeVYxVh9xwkOZrszcK2nr2XCLDmcPiEBmZg_wE\"\n      }\n    });\n    const json=await response.json()\n    console.log(json);\n    setNotes()\n \n  }\n\n\n  //  delete note\n\n  const deleteNote = (id) => {\n    console.log('deleting the note with id' + id);\n    const newNote = notes.filter((note) => { return note._id !== id })\n    setNotes(newNote)\n  }\n\n\n  //  edit note\n  const editNote = async(id, title, description, tag) => {\n    // Api call (google-fech with headers)\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjJhYjg5YTU5ZTZmZWY5ODY0YzZiNzhhIn0sImlhdCI6MTY1NTQ1NTE3MX0.7Y-7ZyeVYxVh9xwkOZrszcK2nr2XCLDmcPiEBmZg_wE\"\n\n      },\n\n      body: JSON.stringify({title,description,tag})\n    });\n    const json= response.json();\n\n\n\n  for (let index = 0; index < notes.length; index++) {\n    const element = notes[index];\n    if (element._id === id) {\n      element.title = title\n      element.description = description\n      element.tag = tag\n    }\n\n  }\n\n}\n\n\nreturn (\n  <NoteContex.Provider value={{ notes, setNotes, addNote, deleteNote, editNote,getNotes }}>\n\n    {props.children}\n  </NoteContex.Provider>\n)\n}\n\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module"}