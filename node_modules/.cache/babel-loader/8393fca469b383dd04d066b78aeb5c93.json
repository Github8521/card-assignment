{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // createAsyncThunk,\n\nexport const STATUSES = Object.freeze({\n  IDLE: 'idle',\n  ERROR: 'error',\n  LOADING: 'loading'\n});\nconst initialState = {\n  data: [],\n  status: null\n};\nconst host = 'http://localhost:8000';\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {\n    setData(state, action) {\n      state.data = action.payload;\n    },\n\n    setStatus(state, action) {\n      state.status = action.payload;\n    },\n\n    addData(state, action) {\n      state.data.push(action.payload);\n    },\n\n    deleteData(state, action) {\n      state.data.filter(arrow => arrow.id !== action.payload);\n    }\n\n  }\n});\nexport const {\n  setData,\n  setStatus,\n  addData,\n  deleteData\n} = apiSlice.actions;\nexport default apiSlice.reducer; // \n\nexport function getNotes() {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING));\n\n    try {\n      const response = await fetch(`${host}/getcard`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      dispach(setData(data));\n      dispach(setStatus(STATUSES.IDLE));\n    } catch (error) {\n      console.log(error);\n      dispach(setStatus(STATUSES.ERROR));\n    }\n  };\n}\nexport function addNote(cardName, projectBudjet, projectendDate) {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING));\n\n    try {\n      const response = await fetch(`${host}/getcard`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cardName,\n          projectBudjet,\n          projectendDate\n        })\n      });\n      const note = await response.json();\n\n      if (note.success === true) {\n        dispach(addData(note.responce));\n        dispach(setStatus(STATUSES.IDLE));\n      }\n\n      if (note.success === false) {\n        dispach(setStatus(STATUSES.ERROR));\n      }\n    } catch (error) {\n      console.log(error);\n      dispach(setStatus(STATUSES.ERROR));\n    }\n  };\n}\nexport function deleteNote(id) {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING));\n\n    try {\n      await fetch(`${host}/getcard/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); // const json=await response.json()\n      // console.log(json);\n      // console.log('deleting the note with id' + id);\n      // const newNote = initialState.data.filter((arrow) => arrow.id !== id)\n      // dispach(setData(newNote))\n\n      dispach(getNotes()); // dispach(deleteData(json))\n\n      dispach(setStatus(STATUSES.IDLE));\n    } catch (error) {\n      console.log(error);\n      dispach(setStatus(STATUSES.ERROR));\n    }\n  };\n}\nexport function editNote(id, cardName, projectBudjet, projectendDate) {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING));\n\n    try {\n      const response = await fetch(`${host}/getcard/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cardName,\n          projectBudjet,\n          projectendDate\n        })\n      });\n      const json = await response.json();\n      console.log(json); // let newNotes = JSON.parse(JSON.stringify(notes))\n      // for (let index = 0; index < newNotes.length; index++) {\n      //   const element = newNotes[index];\n      //   if (element._id === id) {\n      //     newNotes[index].cardName = cardName\n      //     newNotes[index].projectBudjet = projectBudjet\n      //     newNotes[index].projectendDate = projectendDate\n      //     break\n      //   }\n      // }\n\n      dispach(getNotes());\n      dispach(setStatus(STATUSES.IDLE));\n    } catch (error) {\n      dispach(setStatus(STATUSES.ERROR));\n    }\n  };\n}","map":{"version":3,"names":["createSlice","STATUSES","Object","freeze","IDLE","ERROR","LOADING","initialState","data","status","host","apiSlice","name","reducers","setData","state","action","payload","setStatus","addData","push","deleteData","filter","arrow","id","actions","reducer","getNotes","getNotesThunk","dispach","getstate","response","fetch","method","headers","json","error","console","log","addNote","cardName","projectBudjet","projectendDate","body","JSON","stringify","note","success","responce","deleteNote","editNote"],"sources":["/Users/gopal/react-js/redux-toolKit/src/app/ApiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n// createAsyncThunk,\n\nexport const STATUSES = Object.freeze({\n  IDLE: 'idle',\n  ERROR: 'error',\n  LOADING: 'loading'\n})\n\nconst initialState = {\n  data: [],\n  status: null\n}\n\nconst host = 'http://localhost:8000'\n\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState,\n  reducers: {\n    setData(state, action) {\n      state.data = action.payload\n    },\n    setStatus(state, action) {\n      state.status = action.payload\n    },\n    addData(state, action) {\n      state.data.push(action.payload)\n    },\n    deleteData(state, action) {\n      state.data.filter((arrow) => arrow.id !== action.payload)\n    }\n  },\n\n\n})\nexport const { setData, setStatus, addData, deleteData } = apiSlice.actions\n\nexport default apiSlice.reducer\n\n\n// \n\n\nexport function getNotes() {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING))\n    try {\n      const response = await fetch(`${host}/getcard`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n\n        }\n      });\n      const data = await response.json()\n      dispach(setData(data))\n      dispach(setStatus(STATUSES.IDLE))\n\n\n    } catch (error) {\n      console.log(error);\n      dispach(setStatus(STATUSES.ERROR))\n\n\n\n    }\n\n  }\n}\n\n\n\n\nexport function addNote(cardName, projectBudjet, projectendDate) {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING))\n    try {\n      const response = await fetch(`${host}/getcard`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n\n\n        },\n\n        body: JSON.stringify({ cardName, projectBudjet, projectendDate })\n      });\n      const note = await response.json();\n      if (note.success === true) {\n\n        dispach(addData(note.responce))\n        dispach(setStatus(STATUSES.IDLE))\n\n\n      }\n      if (note.success === false) {\n        dispach(setStatus(STATUSES.ERROR))\n\n\n      }\n\n\n\n    } catch (error) {\n      console.log(error);\n      dispach(setStatus(STATUSES.ERROR))\n\n\n\n    }\n\n  }\n}\n\n\n\nexport function deleteNote(id) {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING))\n    try {\n      await fetch(`${host}/getcard/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n\n\n        },\n\n      });\n      // const json=await response.json()\n      // console.log(json);\n\n      // console.log('deleting the note with id' + id);\n\n      // const newNote = initialState.data.filter((arrow) => arrow.id !== id)\n      // dispach(setData(newNote))\n      dispach(getNotes())\n      // dispach(deleteData(json))\n      dispach(setStatus(STATUSES.IDLE))\n\n\n    } catch (error) {\n      console.log(error);\n      dispach(setStatus(STATUSES.ERROR))\n\n\n\n\n    }\n\n  }\n}\n\n\n\nexport function editNote(id, cardName, projectBudjet, projectendDate) {\n  return async function getNotesThunk(dispach, getstate) {\n    dispach(setStatus(STATUSES.LOADING))\n    try {\n      const response = await fetch(`${host}/getcard/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n\n        },\n\n        body: JSON.stringify({ cardName, projectBudjet, projectendDate })\n      });\n      const json = await response.json();\n      console.log(json);\n\n\n      // let newNotes = JSON.parse(JSON.stringify(notes))\n      // for (let index = 0; index < newNotes.length; index++) {\n      //   const element = newNotes[index];\n\n      //   if (element._id === id) {\n      //     newNotes[index].cardName = cardName\n      //     newNotes[index].projectBudjet = projectBudjet\n      //     newNotes[index].projectendDate = projectendDate\n      //     break\n      //   }\n\n      // }\n      dispach(getNotes())\n      dispach(setStatus(STATUSES.IDLE))\n\n\n    } catch (error) {\n      dispach(setStatus(STATUSES.ERROR))\n\n\n    }\n\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}