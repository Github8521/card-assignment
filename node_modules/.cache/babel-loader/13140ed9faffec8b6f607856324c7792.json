{"ast":null,"code":"var _jsxFileName = \"/Users/gopal/react-js/inotebook/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContex from \"./NoteContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = 'http://localhost:4000';\n  const initialnotes = [];\n  const [notes, setNotes] = useState(initialnotes); //  add note\n\n  const addNote = async (title, description, tag) => {\n    // api call \n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  }; //  get all note\n\n\n  const getNotes = async () => {\n    // api call \n    const response = await fetch(`${host}/api/notes/fechallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  }; //  delete note\n\n\n  const deleteNote = async id => {\n    // api call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log('deleting the note with id' + id);\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNote);\n  }; //  edit note\n\n\n  const editNote = async (id, title, description, tag) => {\n    // Api call (google-fech with headers)\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContex.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NoteState, \"PmObJbMQ3XIzAd8o6ZA74AiiggE=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContex","NoteState","props","host","initialnotes","notes","setNotes","addNote","title","description","tag","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","note","json","concat","getNotes","console","log","deleteNote","id","newNote","filter","_id","editNote","newNotes","parse","index","length","element","children"],"sources":["/Users/gopal/react-js/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\nimport NoteContex from \"./NoteContex\";\nconst NoteState = (props) => {\n  const host = 'http://localhost:4000'\n  const initialnotes = []\n  const [notes, setNotes] = useState(initialnotes)\n\n  //  add note\n  const addNote =async (title, description, tag) => {\n    // api call \n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\":localStorage.getItem('token')\n\n      },\n\n      body: JSON.stringify({title,description,tag})\n    });\n    const note= await response.json();\n    setNotes(notes.concat(note))\n  }\n  //  get all note\n  const getNotes =async () => {\n    // api call \n    const response = await fetch(`${host}/api/notes/fechallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\":localStorage.getItem('token')\n      }\n    });\n    const json=await response.json()\n    console.log(json);\n    setNotes(json)\n \n  }\n\n\n  //  delete note\n\n  const deleteNote =async (id) => {\n    // api call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\":localStorage.getItem('token')\n\n      },\n\n    });\n    const json=response.json()\n    console.log(json);\n\n    console.log('deleting the note with id' + id);\n    const newNote = notes.filter((note) => { return note._id !== id })\n    setNotes(newNote)\n  }\n\n\n  //  edit note\n  const editNote = async(id, title, description, tag) => {\n    // Api call (google-fech with headers)\n\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\":localStorage.getItem('token')\n\n      },\n\n      body: JSON.stringify({title,description,tag})\n    });\n    const json= await response.json();\n    console.log(json);\n\n\nlet newNotes=JSON.parse(JSON.stringify(notes))\n  for (let index = 0; index < newNotes.length; index++) {\n    const element = newNotes[index];\n \n    if (element._id === id) {\n      newNotes[index].title = title\n      newNotes[index].description = description\n      newNotes[index].tag = tag\n      break\n    }\n\n  }\n  setNotes(newNotes)\n\n}\n\n\n\nreturn (\n  <NoteContex.Provider value={{ notes, setNotes, addNote, deleteNote, editNote,getNotes }}>\n\n    {props.children}\n  </NoteContex.Provider>\n)\n}\n\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module"}