{"ast":null,"code":"var _jsxFileName = \"/Users/gopal/react-js/assignment/src/context/notes/NoteState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NoteContex from \"./NoteContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = 'http://localhost:8000';\n  const initialnotes = [];\n  const [notes, setNotes] = useState(initialnotes); //  add note\n\n  const addNote = async (cardName, projectBudjet, projectendDate) => {\n    // api call \n    const response = await fetch(`${host}/getcard`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cardName,\n        projectBudjet,\n        projectendDate\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  }; //  get all note\n\n\n  const getNotes = async () => {\n    // api call \n    const response = await fetch(`${host}/getcard`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  }; //  delete note\n\n\n  const deleteNote = async id => {\n    // api call\n    const response = await fetch(`${host}/getcard/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log('deleting the note with id' + id);\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNote);\n  }; //  edit note\n\n\n  const editNote = async (id, cardName, projectBudjet, projectendDate) => {\n    // Api call (google-fech with headers)\n    const response = await fetch(`${host}/getcard/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cardName,\n        projectBudjet,\n        projectendDate\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n\n      if (element._id === id) {\n        newNotes[index].cardName = cardName;\n        newNotes[index].projectBudjet = projectBudjet;\n        newNotes[index].projectendDate = projectendDate;\n        break;\n      }\n    }\n\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContex.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NoteState, \"PmObJbMQ3XIzAd8o6ZA74AiiggE=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContex","NoteState","props","host","initialnotes","notes","setNotes","addNote","cardName","projectBudjet","projectendDate","response","fetch","method","headers","body","JSON","stringify","note","json","concat","getNotes","console","log","deleteNote","id","newNote","filter","_id","editNote","newNotes","parse","index","length","element","children"],"sources":["/Users/gopal/react-js/assignment/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\nimport NoteContex from \"./NoteContex\";\nconst NoteState = (props) => {\n  const host = 'http://localhost:8000'\n  const initialnotes = []\n  const [notes, setNotes] = useState(initialnotes)\n\n  //  add note\n  const addNote =async (cardName, projectBudjet, projectendDate) => {\n    // api call \n    const response = await fetch(`${host}/getcard`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \n\n      },\n\n      body: JSON.stringify({cardName,projectBudjet,projectendDate})\n    });\n    const note= await response.json();\n    setNotes(notes.concat(note))\n  }\n  //  get all note\n  const getNotes =async () => {\n    // api call \n    const response = await fetch(`${host}/getcard`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n     \n      }\n    });\n    const json=await response.json()\n    console.log(json);\n    setNotes(json)\n \n  }\n\n\n  //  delete note\n\n  const deleteNote =async (id) => {\n    // api call\n    const response = await fetch(`${host}/getcard/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \n\n      },\n\n    });\n    const json=response.json()\n    console.log(json);\n\n    console.log('deleting the note with id' + id);\n    const newNote = notes.filter((note) => { return note._id !== id })\n    setNotes(newNote)\n  }\n\n\n  //  edit note\n  const editNote = async(id, cardName, projectBudjet, projectendDate) => {\n    // Api call (google-fech with headers)\n\n    const response = await fetch(`${host}/getcard/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n\n      },\n\n      body: JSON.stringify({cardName,projectBudjet,projectendDate})\n    });\n    const json= await response.json();\n    console.log(json);\n\n\nlet newNotes=JSON.parse(JSON.stringify(notes))\n  for (let index = 0; index < newNotes.length; index++) {\n    const element = newNotes[index];\n \n    if (element._id === id) {\n      newNotes[index].cardName = cardName\n      newNotes[index].projectBudjet = projectBudjet\n      newNotes[index].projectendDate = projectendDate\n      break\n    }\n\n  }\n  setNotes(newNotes)\n\n}\n\n\n\nreturn (\n  <NoteContex.Provider value={{ notes, setNotes, addNote, deleteNote, editNote,getNotes }}>\n\n    {props.children}\n  </NoteContex.Provider>\n)\n}\n\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module"}